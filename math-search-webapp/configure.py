#!/usr/bin/env python3
"""
LC Mathematics Search - Configuration Helper

This script helps you configure the application settings interactively.
"""

import os
import sys


def get_user_input(prompt, default=None):
    """Get user input with optional default value."""
    if default:
        full_prompt = f"{prompt} (default: {default}): "
    else:
        full_prompt = f"{prompt}: "

    user_input = input(full_prompt).strip()
    return user_input if user_input else default


def create_env_file():
    """Create a .env file with user configuration."""
    print("üîß LC Mathematics Search Configuration")
    print("=" * 50)
    print()

    # Get configuration from user
    print("üì° Network Configuration:")
    host = get_user_input("Host to bind to", "0.0.0.0")
    port = get_user_input("Port to run on", "8080")

    print("\nüõ†Ô∏è  Development Configuration:")
    debug_input = get_user_input("Enable debug mode? (y/n)", "n")
    debug = "True" if debug_input.lower() in ["y", "yes", "true"] else "False"

    # Create .env content
    env_content = f"""# LC Mathematics Search Configuration
# Generated by configure.py

# Network Settings
FLASK_HOST={host}
FLASK_PORT={port}

# Development Settings
FLASK_DEBUG={debug}

# Docker Settings (for docker-compose)
APP_PORT={port}
"""

    # Write .env file
    try:
        with open(".env", "w") as f:
            f.write(env_content)

        print(f"\n‚úÖ Configuration saved to .env file!")
        print(f"üåê Your app will run on: http://localhost:{port}")
        print(f"üêõ Debug mode: {debug}")
        print()
        print("üöÄ To start the application:")
        print("   python app.py")
        print()
        print("üê≥ To start with Docker:")
        print("   docker-compose up --build")

    except Exception as e:
        print(f"\n‚ùå Error creating .env file: {e}")
        print("\nüìù Manual configuration:")
        print("Create a .env file with the following content:")
        print()
        print(env_content)


def show_current_config():
    """Show current configuration."""
    print("üìã Current Configuration:")
    print("-" * 30)

    host = os.environ.get("FLASK_HOST", "0.0.0.0")
    port = os.environ.get("FLASK_PORT", "5000")
    debug = os.environ.get("FLASK_DEBUG", "False")

    print(f"Host: {host}")
    print(f"Port: {port}")
    print(f"Debug: {debug}")
    print(f"URL: http://localhost:{port}")
    print()


def main():
    """Main configuration function."""
    if len(sys.argv) > 1 and sys.argv[1] == "--show":
        show_current_config()
        return

    print("Welcome to LC Mathematics Search Configuration!")
    print()

    # Check if .env already exists
    if os.path.exists(".env"):
        print("‚ö†Ô∏è  A .env file already exists.")
        overwrite = get_user_input("Do you want to overwrite it? (y/n)", "n")
        if overwrite.lower() not in ["y", "yes"]:
            print("Configuration cancelled.")
            return

    create_env_file()


if __name__ == "__main__":
    main()
